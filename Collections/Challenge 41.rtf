{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\froman\fcharset0 TimesNewRomanPSMT;
\f3\fmodern\fcharset0 Courier-Bold;\f4\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue120;\red163\green0\blue79;
\red255\green255\blue255;\red73\green17\blue135;\red135\green135\blue135;\red148\green108\blue71;\red107\green0\blue109;
\red0\green0\blue255;\red28\green117\blue20;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c54510;\cssrgb\c70588\c0\c38431;
\cssrgb\c100000\c100000\c100000;\cssrgb\c36078\c14902\c60000;\cssrgb\c60000\c60000\c60000;\cssrgb\c65098\c49804\c34902;\cssrgb\c50196\c0\c50196;
\cssrgb\c0\c0\c100000;\cssrgb\c11373\c52157\c9804;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww15300\viewh16500\viewkind0
\deftab720
\pard\pardeftab720\sl560\sa240\partightenfactor0

\f0\b\fs48 \cf2 \expnd0\expndtw0\kerning0
Challenge 41: Find the median 
\f1\b0\fs24 \
\pard\pardeftab720\sl360\sa240\partightenfactor0

\b\fs32 \cf2 Difficulty: 
\f2\b0 Easy\uc0\u8232 Write an extension to collections that accepts an array of 
\f3\b \cf3 Int 
\f2\b0 \cf2 and returns the median average, 
\f1\fs24 \

\f2\fs32 or nil if there are no values. 
\f1\fs24 \

\b\fs32 Tip: 
\f2\b0 The mean average is the sum of some numbers divided by how many there are. The 
\f1\i median 
\f2\i0 average is the middle of a sorted list. If there is no single middle value \'96 e.g. if there are eight numbers - then the median is the mean of the two middle values. 
\f1\fs24 \
\pard\pardeftab720\sl440\sa240\partightenfactor0

\f0\b\fs37\fsmilli18667 \cf2 Sample input and output 
\f1\b0\fs24 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl360\sa320\partightenfactor0
\ls1\ilvl0
\f2\fs32 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
The code 
\f3\b \cf3 [1, 2, 3].challenge41() 
\f2\b0 \cf2 should return 2. \uc0\u8232 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
The code 
\f3\b \cf3 [1, 2, 9].challenge41() 
\f2\b0 \cf2 should return 2. \uc0\u8232 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
The code 
\f3\b \cf3 [1, 3, 5, 7, 9].challenge41() 
\f2\b0 \cf2 should return 5. \uc0\u8232 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
The code 
\f3\b \cf3 [1, 2, 3, 4].challenge41() 
\f2\b0 \cf2 should return 2.5. \uc0\u8232 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
The code 
\f3\b \cf3 [Int]().challenge41() 
\f2\b0 \cf2 should return nil. \uc0\u8232 
\f0\b\fs37\fsmilli18667 Hints 
\f2\b0\fs32 \uc0\u8232 
\f1\b Hint #1: 
\f2\b0 You\'92ll need to extend 
\f3\b \cf3 Collection 
\f2\b0 \cf2 with a specific constraint.\uc0\u8232 
\f1\b Hint #2: 
\f2\b0 The method should return 
\f3\b \cf3 Double? 
\f2\b0 \cf2 because it might be a whole number, it might be \uc0\u8232 a mean average of two numbers, or it might be nil if the collection is empty. 
\f1\b Hint #3: 
\f2\b0 If you divide an odd integer by two, Swift will round down. \uc0\u8232 
\f1\b Hint #4: 
\f2\b0 If you divide an even-numbered collection\'92s count by two, you\'92ll get the highest of the two values you need for your mean. \uc0\u8232 
\f1\b Hint #5: 
\f2\b0 Make life easy for yourself: sort the collection first. \uc0\u8232 
\f0\b\fs37\fsmilli18667 Solution 
\f2\b0\fs32 \uc0\u8232 \
\pard\pardeftab720\sl360\sa240\partightenfactor0
\cf2 Everyone knows how to do a mean average, because that\'92s by far the most common. The 
\f1\i median 
\f2\i0 average is a little bit out of the ordinary, so it might cause you to think back to school just a little. 
\f1\fs24 \

\f2\fs32 As a reminder, the median average of an array is the number that lies in its center once the array is sorted. If you have two items in the center \'96 i.e., you have an array with an even number of items \'96 then the median is the mean of the two center items. 
\f1\fs24 \

\f2\fs32 So, this is a fairly elementary challenge, spiced up a little by the need for you to frame it as an extension. Hopefully you figured out the extension constraint should be 
\f3\b \cf3 Iterator.Element == Int
\f2\b0 \cf2 , at which point the reminder is plain sailing: 
\f1\fs24 \
\pard\pardeftab720\sl360\partightenfactor0

\f4\fs32 \cf4 \cb5 extension \cf6 Collection \cf4 where \cf6 Iterator\cf7 .\cf6 Element \cf8 == \cf6 Int \cf7 \{\
\cf4    func \cf9 challenge41\cf7 () \cf8 -> \cf6 Double\cf8 ? \cf7 \{\
\cf4       guard \cf6 count \cf8 != \cf10 0 \cf4 else \cf7 \{ \cf4 return \cf10 nil \cf7 \}\
\pard\pardeftab720\sl360\partightenfactor0
\cf11       // sort the items so we can find the center point\
\pard\pardeftab720\sl360\partightenfactor0
\cf4       let \cf6 sorted \cf8 = \cf4 self\cf7 .\cf9 sorted\cf7 ()\
\cf4       let \cf2 middle \cf8 = \cf6 sorted\cf7 .\cf6 count \cf8 / \cf10 2\
\cf4       if \cf6 sorted\cf7 .\cf6 count \cf8 % \cf10 2 \cf8 == \cf10 0 \cf7 \{\
\pard\pardeftab720\sl360\partightenfactor0
\cf11          // return mean average of two center items\
\pard\pardeftab720\sl360\partightenfactor0
\cf4          return \cf9 Double\cf7 (\cf6 sorted\cf7 [\cf2 middle\cf7 ] \cf8 + \cf6 sorted\cf7 [\cf2 middle \cf8 - \cf10 1\cf7 ]) \cf8 / \cf10 2\
\cf7       \} \cf4 else \cf7 \{\
\pard\pardeftab720\sl360\partightenfactor0
\cf11          // return the single center item\
\pard\pardeftab720\sl360\partightenfactor0
\cf4          return \cf9 Double\cf7 (\cf6 sorted\cf7 [\cf2 middle\cf7 ])\
\pard\pardeftab720\sl360\sa240\partightenfactor0
\cf7 \} \} 
\f1\fs24 \cf2 \cb1 \

\f4\fs32 \cf7 \cb5 \} 
\f1\fs24 \cf2 \cb1 \
\pard\pardeftab720\sl360\sa240\partightenfactor0

\f2\fs32 \cf2 Not too hard, I think. Perhaps now you could try implementing a mode average too? 
\f1\fs24 \
}